% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IplBoost.R
\name{cv.IplBoost.default}
\alias{cv.IplBoost.default}
\alias{cv.IplBoost}
\title{cv.IplBoost}
\usage{
\method{cv.IplBoost}{default}(times, status, mat, landmarks, w, M, lambda,
  folds, verbose = FALSE, standardise = TRUE, parallel = FALSE,
  cv.type = "Verweij")
}
\arguments{
\item{times}{A n-dimensional vector of survival times}

\item{status}{A n-dimensional vector of censoring indicators}

\item{mat}{A n x p matrix of covariate values}

\item{landmarks}{A S-dimensinal vector of landmark points to produce dynamic
predictions from}

\item{w}{A number. The "landmark interval width" or how far ahead the survival
predictions will be made}

\item{M}{A number. The number maximum of boosting iterations to perform}

\item{lambda}{A number or an S-dimensional vector. The regularisation parameter 
for the boosting algorithm.}

\item{folds}{A n-dimensional vector that assigns a number between 1 and K to 
each observations for cross-validataion.}

\item{verbose}{Boolean. Indicates whether the iteration number should be 
printed to the console.}

\item{standardise}{Boolean. Indicates if covariates should be standardised.}

\item{parallel}{Boolean. Indicates if the cross validation should be performed
in parallel. Relies on the package snowfall. Cluster must be initialised before
calling cv.IplBoost in the case of this being true, see the
\link[snowfall]{snowfall} package and \link[snowfall]{sfInit}.}

\item{cv.type}{The type of cross validation measure to be used. Defaults to "Verweij" which
refers to the form defined in the paper by Verweij and Van Houwelingen (1993). If cv.type is
set to "naive", the measure is merely computed by evaluating the likelihood for the data that
is not used to compute each estimate, and then averaged over each fold.}
}
\value{
A list containg a (M+1)-dimensional vector of the cross validated ipl
as the first element, and a number indicating the optimal number of iterations
as the second.
}
\description{
This function performs K-fold cross-valitation for \link{IplBoost},
to tune the number of iterations.
}
\examples{
# Tune the number of iterations via cross validation
cv.mod <- cv.IplBoost(times, status, design, lamdmarks=seq(0, 10, 0.1),
                      w=5, M=100, lambda=100,
                      folds=Kfold(length(times), 10))
                      
# Plot the cross-validated likelihood
plot(cv.mod)

# To tune in parallel on 2 cores:
library(snowfall)
sfInit(parallel=TRUE, cpus=2)
cv.mod <- cv.IplBoost(times, status, design, landmarks=seq(0, 10, 0.1),
                      w=5, M=100, lambda=100, folds=Kfold(length(times), 10),
                      parallel=TRUE)
sfStop()

}
